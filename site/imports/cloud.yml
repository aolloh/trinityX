---
- hosts: controllers
  roles:
    - role: trinity/prepare
      stage: "controller"

- name: Cloud Support
  hosts: controllers
  gather_facts: true
  tasks:
    - name: Set cloud_condition fact
      set_fact:
        cloud_condition: >-
          {{ cloud_support | map('regex_replace', '^(.*)$', '\1_cloud') | map('extract', vars) | select('equalto', true) | list | length > 0 }}
    
    - block:
      - name: Include Cloud variables
        include_vars: "group_vars/{{ item }}.yml"
        loop: "{{ vars.cloud_support }}"
        when: vars[item + '_cloud'] is defined and vars[item + '_cloud'] is true
      
      - name: Set IAC fact
        set_fact:
          installers: "{{ vars | dict2items | selectattr('key', 'search', '_installer') | map(attribute='value') | list }}"
      
      - block:
        - name: Resolving AS external IP address
          uri:
            url: "https://ipinfo.io/json"
          register: cloud_local_external_as_ip_info

        - name: Setting external AS IP address
          set_fact:
            cloud_local_external_as_ip: "{{ cloud_local_external_as_ip_info.json.ip }}"
          when:
            - cloud_local_external_as_ip_info.status is defined
            - cloud_local_external_as_ip_info.status | int == 200
        when: cloud_local_external_as_ip is not defined

      - debug:
          msg: "cloud_local_external_as_ip: {{ cloud_local_external_as_ip }}"

      - name: Build iPXE uEFI file for the GRUB Booting.
        include_role:
          name: "cloud/ipxe"
      
      - name: Include Cloud Role and Install IAC approach.
        include_role:
          name: "cloud/{{ item }}"
        loop: "{{ vars.cloud_support }}"
        when: vars[item + '_cloud'] is defined and vars[item + '_cloud'] is true
      
      # - name: Check if any installer is terraform
      #   include_role:
      #     name: "cloud/terraform"
      #   when: "{{ 'terraform' in installers }}"
      
      - name: Include Luna node creation role
        include_role:
          name: "cloud/luna"
        vars:
          rawhostlist: "{{ vars[cloud_item + '_nodes'] }}"
          cloudname: "{{ cloud_item }}"
          cloudtype: "{{ cloud_item }}"
        loop: "{{ vars.cloud_support }}"
        loop_control:
          loop_var: cloud_item
        when:
          - vars[cloud_item + '_cloud'] is defined and vars[cloud_item + '_cloud'] is true
          - vars[cloud_item + '_node'] is defined and vars[cloud_item + '_node'] is true
          - vars[cloud_item + '_nodes']
      
      when: cloud_condition
    
  environment:
    no_proxy: ".{{ trix_domain }},{{ trix_ctrl_ip }},{{ trix_external_fqdn }},{{ trix_ctrl_hostname }},{{ trix_ctrl1_hostname }},{{ trix_ctrl2_hostname }},{{ trix_ctrl3_hostname|default(trix_ctrl1_hostname) }},{{ trix_ctrl4_hostname|default(trix_ctrl2_hostname) }}"
    NO_PROXY: ".{{ trix_domain }},{{ trix_ctrl_ip }},{{ trix_external_fqdn }},{{ trix_ctrl_hostname }},{{ trix_ctrl1_hostname }},{{ trix_ctrl2_hostname }},{{ trix_ctrl3_hostname|default(trix_ctrl1_hostname) }},{{ trix_ctrl4_hostname|default(trix_ctrl2_hostname) }}"
    
