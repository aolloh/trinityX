---
- name: Load a variable file based on the OS type, or a default if not found. Using free-form to specify the file.
  include_vars: "{{ package_arch }}/docker-{{ image_create_distribution }}.yaml"

- name: Create {{ image_path }}/dev
  file:
    path: "{{ image_path }}/dev/"
    state: directory
    mode: 0755
    owner: root
    group: root

- name: Create basic /dev files
  command: "/usr/bin/mknod {{ image_path }}/dev/{{ item.dev }} {{ item.t }} {{ item.ma }} {{ item.mi }} creates={{ image_path }}/dev/{{ item.dev }}"
  args:
    creates: "{{ image_path }}/dev/{{ item.dev }}"
  with_items:
    - {dev: "null", mo: "666", t: 'c', ma: 1, mi: 3}  # device, mode, type, major, minor
    - {dev: "zero", mo: "666", t: 'c', ma: 1, mi: 5}
    - {dev: "random", mo: "666", t: 'c', ma: 1, mi: 8}
    - {dev: "urandom", mo: "666", t: 'c', ma: 1, mi: 9}
    - {dev: "console", mo: "600", t: 'c', ma: 5, mi: 1}
    - {dev: "ptmx", mo: "666", t: 'c', ma: 5, mi: 2}
    - {dev: "tty", mo: "666", t: 'c', ma: 5, mi: 0}

- name: Configuring resolv.conf
  copy:
    dest: "{{ image_path }}/etc/resolv.conf"
    content: "nameserver {{ trix_ctrl_ip }}"

- name: Install Luna2 noarch repository
  ansible.builtin.yum_repository:
    name: luna2-noarch
    description: luna2-noarch
    baseurl: "{{ luna2_noarch_repo_package }}"
    gpgcheck: false
    reposdir: "{{ image_path }}/etc/yum.repos.d/"

- name: Rebuild RPM DB
  shell: "chroot {{ image_path }} rpm --rebuilddb"
  ignore_errors: true

- name: Install core packages - @core, kernel and grub2
  shell: "chroot {{ image_path }} dnf -y install {{ item }}"
  ignore_errors: true
  with_items: "{{ image_core_packages }}"

- name: Reinstall packages
  shell: "chroot {{ image_path }} dnf -y reinstall {{ item }}"
  ignore_errors: true
  with_items: "{{ image_reinstall_packages }}"
