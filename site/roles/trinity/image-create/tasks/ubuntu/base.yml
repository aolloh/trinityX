---
- name: Load a variable file based on the OS type, or a default if not found. Using free-form to specify the file.
  include_vars: "{{ image_create_distribution }}.yaml"
  ignore_errors: true
  no_log: true

- name: Install required packages
  yum:
    name: "{{ required_packages }}"
    state: present

- name: Build basic Ubuntu image
  shell: "debootstrap --variant=buildd {{ ubuntu_distribution_release }} {{ image_path }} {{ ubuntu_distribution_source }} | tee /tmp/debootstrap.log"
  retries: 3
  delay: 15
  register: ubuntu_base_image_result
  until: ubuntu_base_image_result.rc == 0

- name: Verify logs
  shell: "grep 'E:' /tmp/debootstrap.log | grep -v 'Tried to extract package' > /dev/null && echo fail || true"
  register: ubuntu_base_image_verify

- name: Verify build
  fail:
    msg: "Ubuntu basic image build failed. please rerun playbook or look at /tmp/debootstrap.log"
  when: ubuntu_base_image_verify.stdout == 'fail'

- name: Create {{ image_path }}/dev
  file:
    path: "{{ image_path }}/dev/"
    state: directory
    mode: 0755
    owner: root
    group: root

- name: Create basic /dev files
  command: "/usr/bin/mknod {{ image_path }}/dev/{{ item.dev }} {{ item.t }} {{ item.ma }} {{ item.mi }} creates={{ image_path }}/dev/{{ item.dev }}"
  args:
    creates: "{{ image_path }}/dev/{{ item.dev }}"
  with_items:
    - {dev: "null", mo: "666", t: 'c', ma: 1, mi: 3}  # device, mode, type, major, minor
    - {dev: "zero", mo: "666", t: 'c', ma: 1, mi: 5}
    - {dev: "random", mo: "666", t: 'c', ma: 1, mi: 8}
    - {dev: "urandom", mo: "666", t: 'c', ma: 1, mi: 9}
    - {dev: "console", mo: "600", t: 'c', ma: 5, mi: 1}
    - {dev: "ptmx", mo: "666", t: 'c', ma: 5, mi: 2}
    - {dev: "tty", mo: "666", t: 'c', ma: 5, mi: 0}

  # seen in the field where /dev/null had wrong permissions for unknown reasons. apt will fail.
- name: Ensure /dev/null is worldwide writeable
  file:
    path: "{{ image_path }}/dev/null"
    mode: "0666"

- name: Configure repos
  lineinfile:
    path: "{{ image_path }}/etc/apt/sources.list"
    line: "deb http://archive.ubuntu.com/ubuntu {{ ubuntu_distribution_release }} main universe"
    state: present
    create: 'yes'

- name: Updating Apt
  shell: "chroot {{ image_path }} apt-get update"
  ignore_errors: true

- name: Install core packages - @core, kernel and grub2
  shell: "chroot {{ image_path }} apt-get -y install {{ item }}"
  with_items: "{{ image_core_packages }}"

- name: Download luna2-client package
  get_url:
    url: "{{ luna2_client_package }}"
    dest: "{{ image_path }}/tmp/{{ luna2_client_package|split('/')|last }}"
#    validate_certs: false

- name: install luna2-client package
  shell: "chroot {{ image_path }} dpkg --force-architecture -i /tmp/{{ luna2_client_package|split('/')|last }}"

