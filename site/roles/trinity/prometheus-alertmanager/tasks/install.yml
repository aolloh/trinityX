---
- name: Create alertmanager system group
  ansible.builtin.group:
    name: "{{prometheus_alertmanager_system_group}}"
    system: true
    state: present

- name: Create alertmanager system user
  ansible.builtin.user:
    name: "{{prometheus_alertmanager_system_user}}"
    system: true
    shell: "/usr/sbin/nologin"
    group: "{{prometheus_alertmanager_system_group}}"
    groups: "{{prometheus_alertmanager_additional_system_groups}}"
    createhome: false

- name: Create alertmanager directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{prometheus_alertmanager_system_user}}"
    group: "{{prometheus_alertmanager_system_group}}"
    mode: 0755
  with_items:
    - "{{ prometheus_alertmanager_config_dir }}"
    - "{{ prometheus_alertmanager_config_dir }}/templates"
    - "{{ prometheus_alertmanager_db_dir }}"
    - "{{ _prometheus_alertmanager_amtool_config_dir }}"

- name: Get binary
  when:
    - prometheus_alertmanager_binary_local_dir | length == 0
  block:

    - name: Download alertmanager binary to local folder
      become: false
      ansible.builtin.get_url:
        url: "{{ prometheus_alertmanager_binary_url }}"
        dest: "/tmp/alertmanager-{{ prometheus_alertmanager_version }}.linux-{{ go_arch }}.tar.gz"
        checksum: "sha256:{{ __prometheus_alertmanager_checksum }}"
        mode: 0644
      register: _download_archive
      until: _download_archive is succeeded
      retries: 5
      delay: 2
      # run_once: true  # <-- this can't be set due to multi-arch support
      delegate_to: localhost
      check_mode: false

    - name: Unpack alertmanager binaries
      become: false
      ansible.builtin.unarchive:
        src: "/tmp/alertmanager-{{ prometheus_alertmanager_version }}.linux-{{ go_arch }}.tar.gz"
        dest: "/tmp"
        mode: 0755
        creates: "/tmp/alertmanager-{{ prometheus_alertmanager_version }}.linux-{{ go_arch }}/alertmanager"
      delegate_to: localhost
      check_mode: false

    - name: Propagate official alertmanager and amtool binaries
      ansible.builtin.copy:
        src: "/tmp/alertmanager-{{ prometheus_alertmanager_version }}.linux-{{ go_arch }}/{{ item }}"
        dest: "{{ _prometheus_alertmanager_binary_install_dir }}/{{ item }}"
        mode: 0755
        owner: root
        group: root
      with_items:
        - alertmanager
        - amtool
      notify:
        - restart

- name: Propagate locally distributed alertmanager and amtool binaries
  ansible.builtin.copy:
    src: "{{ prometheus_alertmanager_binary_local_dir }}/{{ item }}"
    dest: "{{ _prometheus_alertmanager_binary_install_dir }}/{{ item }}"
    mode: 0755
    owner: root
    group: root
  with_items:
    - alertmanager
    - amtool
  when:
    - prometheus_alertmanager_binary_local_dir | length > 0
  notify:
    - restart

- name: Create log dir if prometheus_alertmanager_log_dir is defined
  ansible.builtin.file:
    path: "{{ prometheus_alertmanager_log_dir }}"
    state: directory
    mode: 0755
  when:
    - prometheus_alertmanager_log_dir is defined

- name: Configure firewalld
  firewalld:
    state: enabled
    port: "{{ prometheus_alertmanager_web_listen_port }}/tcp"
    permanent: "yes"
    immediate: "yes"
  when: ansible_virtualization_type != 'docker'
