# ---
# - name: Configure controller for VNC Desktop Desktop Desktop Server
#   when:
#     - ansible_connection not in 'chroot'
#   block:
#     - name: Make app folders for VNC Desktop
#       ansible.builtin.file:
#         path: "{{ ood_apps_path }}/bc_desktop/{{ item.path }}"
#         state: directory
#         owner: root
#         group: root
#         mode: "0755"
#       notify: Run update_ood
#       with_community.general.filetree: 
#       - templates/desktop/app
#       - files/desktop/app
#       when: item.state == 'directory'

#     - name: Copy app files for VNC Desktop
#       ansible.builtin.copy:
#         src: "{{ item.src }}"
#         dest: "{{ ood_apps_path }}/bc_desktop/{{ item.path }}"
#         mode: "0644"
#         owner: root
#         group: root
#       notify: Run update_ood
#       with_community.general.filetree: 
#       - files/desktop/app
#       when: item.state == 'file'

#     - name: Render app files for VNC Desktop
#       ansible.builtin.template:
#         src: "{{ item.src }}"
#         dest: "{{ ood_apps_path }}/bc_desktop/{{  item.path | regex_replace('[.]j2$', '') }}"
#         mode: "0644"
#         owner: root
#         group: root
#       notify: Run update_ood
#       with_community.general.filetree: 
#       - templates/desktop/app
#       when: item.state == 'file'

#     - name: Render module file for VNC Desktop
#       ansible.builtin.template:
#         src: desktop/module.lua.j2
#         dest: "{{ trix_shared }}/modulefiles/ood-desktop.lua"
#         mode: "0644"
#         owner: root
#         group: root
#       notify: Run update_ood
#       when: "'desktop/module.lua.j2' is exists"

# tasks file for ood-desktop
# - name: Install ood-desktop requirements ( on machine whoose desktop is forwarded )
#   block:
#     - name: Install required yum repos
#       ansible.builtin.dnf:
#         name: "{{ item.name }}"
#         state: present
#         update_cache: true
#         disable_gpg_check: "{{ item.no_gpgcheck | default(False) }}"
#         enablerepo: "{{ item.enablerepo | default('') }}"
#       with_items: "{{ ood_interactive_apps_desktop_repos_rpms }}"
#       retries: "{{ rpm_retries | default(3) }}"
#       delay: "{{ rpm_delay | default(15) }}"

#     - name: Install required yum packages
#       ansible.builtin.dnf:
#         name: "{{ item.name }}"
#         state: present
#         update_cache: true
#         disable_gpg_check: "{{ item.no_gpgcheck | default(False) }}"
#         enablerepo: "{{ item.enablerepo | default('') }}"
#       with_items: "{{ ood_interactive_apps_desktop_rpms }}"
#       retries: "{{ rpm_retries | default(3) }}"
#       delay: "{{ rpm_delay | default(15) }}"
