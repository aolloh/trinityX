---

# https://www.suse.com/support/kb/doc/?id=000018213
- name: Ensure lvm can be controlled from pacemaker by adding empty volume in lvm activation
  lineinfile:
    dest: "/etc/lvm/lvm.conf"
    insertafter: '^activation {'
    line: "	volume_list = [ ]"
  ignore_errors: true

#- name: Create empty DRBD disk list
#  set_fact:
#      drbd_fs_disks: []

- name: Build DRBD disk list
  set_fact:
      drbd_fs_disks:
        '{{ drbd_fs_disks|default([]) +
          [{ "name": item.name,
             "disk": item.disk,
             "fstype": item.fstype | default(""),
             "options": item.options | default(""),
             "device": item.device }] }}'
  with_items: "{{ shared_fs_disks }}"
  when: item.type == 'drbd'

- debug:
    msg: "{{ drbd_fs_disks }}"

- name: Configure DRBD
  ansible.builtin.include_tasks:
    file: drbd.yaml
  when: drbd_fs_disks is defined and drbd_fs_disks|length > 0 and goo is defined

# more types can be added here
# ....

- name: Build LVM partition list
  set_fact:
      shared_fs_lvm_partitions:
        '{{ shared_fs_lvm_partitions|default([]) +
            item.partitions | map("combine",{"vgroup": item.name}) }}'
  loop: "{{ shared_fs_disks }}"
  when: 
    - item.partitions is defined
    - item.fstype == 'lvm'

- name: Build ZFS partition list
  set_fact:
      shared_fs_zfs_partitions:
        '{{ shared_fs_zfs_partitions|default([]) +
            item.partitions | map("combine",{"zpool": item.name}) }}'
  loop: "{{ shared_fs_disks }}"
  when: 
    - item.partitions is defined
    - item.fstype == 'zfs'

- name: Configure LVM Partitions
  ansible.builtin.include_tasks:
    file: partitions_lvm.yaml
  when: 
    - shared_fs_lvm_partitions is defined
    - shared_fs_lvm_partitions | length > 0

- name: Configure ZFS Partitions
  ansible.builtin.include_tasks:
    file: partitions_zfs.yaml
  when: 
    - shared_fs_zfs_partitions is defined
    - shared_fs_zfs_partitions | length > 0

# wrapping things up

- block:
  - name: Clear possible pacemaker dependency messages
    shell: "pcs resource cleanup"

  - name: Wait 10s for cleanup to take effect
    wait_for:
      timeout: 10

  - name: Clear possible pacemaker dependency messages
    shell: "pcs resource cleanup"
  when: primary

