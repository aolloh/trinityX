---

- block:

  - name: Load a variable file based on the OS type, or a default if not found. Using free-form to specify the file.
    include_vars: "{{ item }}"
    with_first_found:
      - "{{ ansible_distribution }}{{ ansible_distribution_major_version}}.yaml"
      - "{{ ansible_os_family }}{{ ansible_distribution_major_version}}.yaml"
    ignore_errors: true

  - name: Install required packages
    yum:
      name: "{{ sync_secrets_packages }}"
      state: present
      disable_gpg_check: true
    tags: install-only

  - name: Ensure temporary sync mount location exists
    file:
      path: /mnt/sync
      state: directory

  - block:
    - name: Resolve sync controller
      set_fact:
        sync_remote: '{{ item.1 }}'
      with_together:
        - '{{ all_ctrl_hostname }}'
        - '{{ all_ctrl_ip }}'
      when:
        - item.0 == sync_controller
        - sync_controller != ansible_hostname

    - name: Use second controller as sync controller
      set_fact:
        sync_remote: '{{ trix_ctrl2_ip }}'
      when: sync_controller == ansible_hostname
    when:
      - sync_controller is defined

  - debug:
      msg: 'Using {{ sync_remote }} ip for syncing'

  - name: Temporarily mount sync from sync/primary controller
    shell: "mount {{ sync_remote }}:{{ trix_sync }} /mnt/sync"

  - name: Copy all secrets
    copy:
      src: '/mnt/sync/'
      dest: '{{ trix_sync }}'

  - name: Umount sync
    shell: "umount -l /mnt/sync"
  when:
    - not primary

