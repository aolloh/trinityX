---
- name: Alerting rules file
  ansible.builtin.template:
    src: "alert.rules.j2"
    dest: "{{ prometheus_server_config_dir }}/rules/ansible_managed.rules"
    owner: root
    group: "{{prometheus_server_system_group}}"
    mode: 0640
    validate: "{{ _prometheus_server_binary_install_dir }}/promtool check rules %s"
  when:
    - prometheus_server_alert_rules != []
    - not prometheus_server_agent_mode
  notify:
    - reload 

- name: Copy custom alerting rule files
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "{{ prometheus_server_config_dir }}/rules/"
    owner: root
    group: "{{prometheus_server_system_group}}"
    mode: 0640
    validate: "{{ _prometheus_server_binary_install_dir }}/promtool check rules %s"
  with_fileglob: "{{ prometheus_server_alert_rules_files }}"
  when:
    - not prometheus_server_agent_mode
  notify:
    - reload 

- name: Configure prometheus
  ansible.builtin.template:
    src: "{{ prometheus_server_config_file }}"
    dest: "{{ prometheus_server_config_dir }}/prometheus.yml"
    force: true
    owner: root
    group: "{{prometheus_server_system_group}}"
    mode: 0640
    validate: "{{ _prometheus_server_binary_install_dir }}/promtool check config %s"
  notify:
    - reload 

- name: Configure Prometheus web
  ansible.builtin.copy:
    content: "{{ prometheus_server_web_config | to_nice_yaml(indent=2, sort_keys=False) }}"
    dest: "{{ prometheus_server_config_dir }}/web.yml"
    force: true
    owner: root
    group: "{{prometheus_server_system_group}}"
    mode: 0640

- name: Create sd targets directories if needed
  ansible.builtin.file:
    path: "{{ item | dirname }}"
    state: directory
    owner: root
    group: "{{prometheus_server_system_group}}"
    mode: 0750
  loop: "{{ prometheus_server_sd_files }}"

- name: Create sd targets files if needed
  ansible.builtin.file:
    path: "{{ item }}"
    state: touch
    owner: root
    group: "{{prometheus_server_system_group}}"
    mode: 0750
  loop: "{{ prometheus_server_sd_files }}"

- name: Configure prometheus self-exporter if prometheus_server_exporter_sd_file is defined
  blockinfile:
    path: "{{ prometheus_server_exporter_sd_file }}"
    block: |
      - targets:
        - {{ ansible_fqdn }}:{{ prometheus_server_web_listen_port }}
        labels:
          exporter: prometheus
      {% if ansible_hostname in (all_ctrl_hostnames|default([trix_ctrl_hostname])) %}
          luna_group: controller
          luna_role: controller
      {% endif %}
    marker: "### {mark} ANSIBLE MANAGED BLOCK ({{ ansible_fqdn }}.prometheus_server_exporter)"
  when:
    - prometheus_server_exporter_sd_file is defined
  


# - name: Configure prometheus static targets
#   ansible.builtin.copy:
#     content: |
#       {{ item.value | to_nice_yaml(indent=2, sort_keys=False) }}
#     dest: "{{ prometheus_server_config_dir }}/file_sd/{{ item.key }}.yml"
#     force: true
#     owner: root
#     group: prometheus
#     mode: 0640
#   with_dict: "{{ prometheus_server_targets }}"
#   when: prometheus_server_targets != {}

# - name: Copy prometheus custom static targets
#   ansible.builtin.copy:
#     src: "{{ item }}"
#     dest: "{{ prometheus_server_config_dir }}/file_sd/"
#     force: true
#     owner: root
#     group: prometheus
#     mode: 0640
#   with_fileglob: "{{ prometheus_server_static_targets_files }}"
