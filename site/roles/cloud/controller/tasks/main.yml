---

- block:
  - name: Verifying if we have an existing temporary working directory
    stat:
      path: /tmp/remote_controller
    register: controller_temporary_working_directory

  - name: Removing existing temporary working directory
    file:
      path: /tmp/remote_controller
      state: absent
    when: controller_temporary_working_directory.stat.exists

  - name: prepare temporary working directory
    file:
      path: /tmp/remote_controller
      state: directory

  - name: Preparing all.yml
    template:
      src: all.yml.j2
      dest: /tmp/remote_controller/all.yml

  - name: preparing TrinityX repo for remote controller
    shell: "tar -C {{ playbook_dir }}/../.. --exclude site/group_vars/*.yml --exclude .git -zcvf /tmp/remote_controller/trinityx.tgz ."

  - name: Transferring file to remote controller
    shell: "scp /tmp/remote_controller/{{ item }} {{ controller }}:"
    with_items:
      - all.yml
      - trinityx.tgz

  - debug:
      msg: "Please note that the next tasks may take very long.... Progress can be followed tailing /tmp/cloud-controller-pre.out and /tmp/cloud-controller-run.out"

#  Below should be the way, but we have roles where file_globs (e.g. trinity/ssl-cert) renders below invalid
#  We're stuck with the further down below....
#
#  - name: Preparing remote hosts inventory
#    copy:
#      dest: "hosts-{{ cloudname }}"
#      content: |
#        [controllers]
#        controller-{{ cloudname }} ansible_host={{ controller }}
#
#  - name: Running remote playbook
#    shell: "ansible-playbook -i hosts-{{ cloudname }} imports/cloud-shadow-controller.yml"

  - name: Preparing remote controller installation
    shell: "ssh {{ controller }} \"mkdir install; cd install && tar -zxvf ../trinityx.tgz && cp ../all.yml site/group_vars/ && touch site/group_vars/{{ cloudname }}.yml\" | tee /tmp/cloud-controller-pre.out"

  - name: Creating dummy vars files for remote controller installation
    shell: "ssh {{ controller }} \"touch install/site/group_vars/{{ item }}.yml\" | tee -a /tmp/cloud-controller-pre.out"
    with_items: "{{ cloud_support }}"
    
  - name: Running playbook on remote controller
    shell: "ssh {{ controller }} \"cd install && WITH_ZFS=no USE_CURRENT_KERNEL=yes bash prepare.sh && cd site && ansible-playbook imports/cloud-shadow-controller.yml\" | tee /tmp/cloud-controller-run.out"

  when: controller
